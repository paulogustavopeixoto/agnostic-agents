"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.githubCreatePullRequestReviewCommentAction = void 0;
const tslib_1 = require("tslib");
const index_1 = require("../../index");
const pieces_framework_1 = require("@activepieces/pieces-framework");
const common_1 = require("../common");
const pieces_common_1 = require("@activepieces/pieces-common");
exports.githubCreatePullRequestReviewCommentAction = (0, pieces_framework_1.createAction)({
    auth: index_1.githubAuth,
    name: 'github_create_pull_request_review_comment',
    displayName: 'Create Pull Request Review Comment',
    description: 'Creates a review comment on a pull request in a GitHub repository',
    props: {
        repository: common_1.githubCommon.repositoryDropdown,
        pull_number: pieces_framework_1.Property.Number({
            displayName: 'Pull Request Number',
            description: 'The number of the pull request',
            required: true,
        }),
        commit_id: pieces_framework_1.Property.ShortText({
            displayName: 'Commit SHA',
            description: 'The SHA of the commit to comment on',
            required: true,
        }),
        path: pieces_framework_1.Property.ShortText({
            displayName: 'File Path',
            description: 'The relative path to the file to comment on',
            required: true,
        }),
        body: pieces_framework_1.Property.LongText({
            displayName: 'Comment Body',
            description: 'The content of the review comment',
            required: true,
        }),
        position: pieces_framework_1.Property.Number({
            displayName: 'Position',
            description: 'The position in the diff where the comment should be placed',
            required: true,
        }),
    },
    run(_a) {
        return tslib_1.__awaiter(this, arguments, void 0, function* ({ auth, propsValue }) {
            const { pull_number, commit_id, path, body, position } = propsValue;
            const { owner, repo } = propsValue.repository;
            const response = yield (0, common_1.githubApiCall)({
                accessToken: auth.access_token,
                method: pieces_common_1.HttpMethod.POST,
                resourceUri: `/repos/${owner}/${repo}/pulls/${pull_number}/comments`,
                body: {
                    commit_id,
                    path,
                    body,
                    position,
                },
            });
            return response;
        });
    },
});
//# sourceMappingURL=create-pull-request-review-comment.js.map