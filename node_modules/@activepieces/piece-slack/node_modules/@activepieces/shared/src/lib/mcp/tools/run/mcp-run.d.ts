import { Static } from '@sinclair/typebox';
export declare enum McpRunStatus {
    SUCCESS = "Success",
    FAILED = "Failed"
}
export declare const McpPieceRunMetadata: import("@sinclair/typebox").TObject<{
    pieceName: import("@sinclair/typebox").TString;
    pieceVersion: import("@sinclair/typebox").TString;
    actionName: import("@sinclair/typebox").TString;
}>;
export type McpPieceRunMetadata = Static<typeof McpPieceRunMetadata>;
export declare const McpFlowRunMetadata: import("@sinclair/typebox").TObject<{
    flowId: import("@sinclair/typebox").TString;
    flowVersionId: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
}>;
export type McpFlowRunMetadata = Static<typeof McpFlowRunMetadata>;
export declare const McpRun: import("@sinclair/typebox").TObject<{
    mcpId: import("@sinclair/typebox").TString;
    projectId: import("@sinclair/typebox").TString;
    toolId: import("@sinclair/typebox").TString;
    metadata: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        pieceName: import("@sinclair/typebox").TString;
        pieceVersion: import("@sinclair/typebox").TString;
        actionName: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        flowId: import("@sinclair/typebox").TString;
        flowVersionId: import("@sinclair/typebox").TString;
        name: import("@sinclair/typebox").TString;
    }>]>;
    input: import("@sinclair/typebox").TAny;
    output: import("@sinclair/typebox").TAny;
    status: import("@sinclair/typebox").TEnum<typeof McpRunStatus>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type McpRun = Static<typeof McpRun>;
