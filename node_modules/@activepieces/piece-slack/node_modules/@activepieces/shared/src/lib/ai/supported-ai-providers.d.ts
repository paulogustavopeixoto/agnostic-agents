import { ImageModel, LanguageModel } from 'ai';
export type SupportedAIProvider = {
    provider: string;
    baseUrl: string;
    displayName: string;
    markdown: string;
    logoUrl: string;
    streaming: boolean;
    auth: {
        headerName: string;
        bearer: boolean;
    };
    languageModels: {
        displayName: string;
        instance: LanguageModel;
        functionCalling: boolean;
        pricing: LanguageModelPricing;
    }[];
    imageModels: {
        displayName: string;
        instance: ImageModel;
        pricing: ImageModelPricing;
    }[];
};
type TableData<TRow extends string, TCol extends string, TValue> = {
    [R in TRow]: {
        [C in TCol]: TValue;
    };
};
export type DALLE3PricingPerImage = TableData<'standard' | 'hd', '1024x1024' | '1024x1792' | '1792x1024', number>;
export type DALLE2PricingPerImage = TableData<'standard', '256x256' | '512x512' | '1024x1024', number>;
type ImageModelPricing = DALLE3PricingPerImage | DALLE2PricingPerImage | number;
export type FlatLanguageModelPricing = {
    input: number;
    output: number;
};
export type TieredLanguageModelPricing = {
    input: {
        threshold: number;
        underThresholdRate: number;
        overThresholdRate: number;
    };
    output: {
        threshold: number;
        underThresholdRate: number;
        overThresholdRate: number;
    };
};
export type CategorizedLanguageModelPricing = {
    input: {
        default: number;
        audio: number;
    };
    output: number;
};
export type LanguageModelPricing = FlatLanguageModelPricing | TieredLanguageModelPricing | CategorizedLanguageModelPricing;
export declare const SUPPORTED_AI_PROVIDERS: SupportedAIProvider[];
export {};
