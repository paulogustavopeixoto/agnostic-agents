import { Static } from '@sinclair/typebox';
export declare const AIProvider: import("@sinclair/typebox").TObject<{
    config: import("@sinclair/typebox").TObject<{
        apiKey: import("@sinclair/typebox").TString;
    }>;
    provider: import("@sinclair/typebox").TString;
    platformId: import("@sinclair/typebox").TString;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type AIProvider = Static<typeof AIProvider>;
export declare const AIProviderWithoutSensitiveData: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    platformId: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
    provider: import("@sinclair/typebox").TString;
}>;
export type AIProviderWithoutSensitiveData = Static<typeof AIProviderWithoutSensitiveData>;
export declare const CreateAIProviderRequest: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TString;
    apiKey: import("@sinclair/typebox").TString;
}>;
export type CreateAIProviderRequest = Static<typeof CreateAIProviderRequest>;
export declare const AIUsage: import("@sinclair/typebox").TObject<{
    provider: import("@sinclair/typebox").TString;
    model: import("@sinclair/typebox").TString;
    cost: import("@sinclair/typebox").TNumber;
    projectId: import("@sinclair/typebox").TString;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type AIUsage = Static<typeof AIUsage>;
export * from './supported-ai-providers';
export * from './ai-sdk';
