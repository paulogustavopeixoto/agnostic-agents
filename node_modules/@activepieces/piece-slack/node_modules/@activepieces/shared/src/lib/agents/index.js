"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RunAgentRequest = exports.ListAgentsQueryParams = exports.UpdateAgentRequest = exports.CreateAgentRequest = exports.Agent = exports.AgentTestResult = exports.AgentTaskStatus = exports.AgentOutputField = exports.AgentOutputFieldType = exports.agentbuiltInToolsNames = exports.AgentOutputType = void 0;
const typebox_1 = require("@sinclair/typebox");
const common_1 = require("../common");
var AgentOutputType;
(function (AgentOutputType) {
    AgentOutputType["NO_OUTPUT"] = "no_output";
    AgentOutputType["STRUCTURED_OUTPUT"] = "structured_output";
})(AgentOutputType || (exports.AgentOutputType = AgentOutputType = {}));
exports.agentbuiltInToolsNames = {
    markAsComplete: 'markAsComplete',
};
var AgentOutputFieldType;
(function (AgentOutputFieldType) {
    AgentOutputFieldType["TEXT"] = "text";
    AgentOutputFieldType["NUMBER"] = "number";
    AgentOutputFieldType["BOOLEAN"] = "boolean";
})(AgentOutputFieldType || (exports.AgentOutputFieldType = AgentOutputFieldType = {}));
exports.AgentOutputField = typebox_1.Type.Object({
    displayName: typebox_1.Type.String(),
    description: typebox_1.Type.Optional(typebox_1.Type.String()),
    type: typebox_1.Type.Enum(AgentOutputFieldType),
});
var AgentTaskStatus;
(function (AgentTaskStatus) {
    AgentTaskStatus["COMPLETED"] = "COMPLETED";
    AgentTaskStatus["FAILED"] = "FAILED";
})(AgentTaskStatus || (exports.AgentTaskStatus = AgentTaskStatus = {}));
exports.AgentTestResult = typebox_1.Type.Object({
    todoId: typebox_1.Type.String(),
    status: typebox_1.Type.Enum(AgentTaskStatus),
    output: typebox_1.Type.Unknown(),
});
exports.Agent = typebox_1.Type.Object(Object.assign(Object.assign({}, common_1.BaseModelSchema), { displayName: typebox_1.Type.String(), description: typebox_1.Type.String(), systemPrompt: typebox_1.Type.String(), profilePictureUrl: typebox_1.Type.String(), testPrompt: typebox_1.Type.Optional(typebox_1.Type.String()), projectId: typebox_1.Type.String(), maxSteps: typebox_1.Type.Number(), mcpId: typebox_1.Type.String(), platformId: typebox_1.Type.String(), taskCompleted: typebox_1.Type.Number(), outputType: typebox_1.Type.Optional(typebox_1.Type.Enum(AgentOutputType)), outputFields: typebox_1.Type.Optional(typebox_1.Type.Array(exports.AgentOutputField)) }));
exports.CreateAgentRequest = typebox_1.Type.Object({
    displayName: typebox_1.Type.String(),
    description: typebox_1.Type.String(),
});
exports.UpdateAgentRequest = typebox_1.Type.Object({
    systemPrompt: typebox_1.Type.Optional(typebox_1.Type.String()),
    displayName: typebox_1.Type.Optional(typebox_1.Type.String()),
    description: typebox_1.Type.Optional(typebox_1.Type.String()),
    testPrompt: typebox_1.Type.Optional(typebox_1.Type.String()),
    outputType: typebox_1.Type.Optional(typebox_1.Type.String()),
    outputFields: typebox_1.Type.Optional(typebox_1.Type.Array(exports.AgentOutputField)),
});
exports.ListAgentsQueryParams = typebox_1.Type.Object({
    limit: typebox_1.Type.Optional(typebox_1.Type.Number()),
    cursor: typebox_1.Type.Optional(typebox_1.Type.String()),
});
exports.RunAgentRequest = typebox_1.Type.Object({
    prompt: typebox_1.Type.String(),
    callbackUrl: typebox_1.Type.Optional(typebox_1.Type.String()),
});
//# sourceMappingURL=index.js.map