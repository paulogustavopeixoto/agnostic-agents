"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotionFieldMapping = void 0;
const pieces_framework_1 = require("@activepieces/pieces-framework");
exports.NotionFieldMapping = {
    checkbox: {
        buildActivepieceType: (property) => pieces_framework_1.Property.Checkbox({
            displayName: property.name,
            required: false,
        }),
        buildNotionType: (property) => ({
            checkbox: property,
        }),
    },
    date: {
        buildActivepieceType: (property) => pieces_framework_1.Property.DateTime({
            displayName: property.name,
            required: false,
        }),
        buildNotionType: (property) => ({
            date: {
                start: property,
            },
        }),
    },
    email: {
        buildActivepieceType: (property) => pieces_framework_1.Property.ShortText({
            displayName: property.name,
            required: false,
        }),
        buildNotionType: (property) => ({
            email: property,
        }),
    },
    // formula: Property.ShortText,
    select: {
        buildActivepieceType: (property) => {
            var _a;
            return pieces_framework_1.Property.StaticDropdown({
                displayName: property.name,
                required: false,
                options: {
                    disabled: false,
                    options: (_a = property.select.options) === null || _a === void 0 ? void 0 : _a.map((option) => {
                        return {
                            label: option.name,
                            value: option.name,
                        };
                    }),
                },
            });
        },
        buildNotionType: (property) => ({
            select: {
                name: property,
            },
        }),
    },
    multi_select: {
        buildActivepieceType: (property) => {
            var _a;
            return pieces_framework_1.Property.StaticMultiSelectDropdown({
                displayName: property.name,
                required: false,
                options: {
                    disabled: false,
                    options: (_a = property.multi_select.options) === null || _a === void 0 ? void 0 : _a.map((option) => {
                        return {
                            label: option.name,
                            value: option.name,
                        };
                    }),
                },
            });
        },
        buildNotionType: (property) => ({
            multi_select: property.map((name) => ({ name: name })),
        }),
    },
    status: {
        buildActivepieceType: (property) => {
            var _a;
            return pieces_framework_1.Property.StaticDropdown({
                displayName: property.name,
                required: false,
                options: {
                    disabled: false,
                    options: (_a = property.status.options) === null || _a === void 0 ? void 0 : _a.map((option) => {
                        return {
                            label: option.name,
                            value: option.name,
                        };
                    }),
                },
            });
        },
        buildNotionType: (property) => ({
            status: {
                name: property,
            },
        }),
    },
    number: {
        buildActivepieceType: (property) => pieces_framework_1.Property.Number({
            displayName: property.name,
            required: false,
        }),
        buildNotionType: (property) => ({
            number: Number(property),
        }),
    },
    phone_number: {
        buildActivepieceType: (property) => pieces_framework_1.Property.Number({
            displayName: property.name,
            required: false,
        }),
        buildNotionType: (property) => ({
            phone_number: property,
        }),
    },
    rich_text: {
        buildActivepieceType: (property) => pieces_framework_1.Property.LongText({ displayName: property.name, required: false }),
        buildNotionType: (property) => ({
            rich_text: [
                {
                    type: 'text',
                    text: {
                        content: property,
                    },
                },
            ],
        }),
    },
    title: {
        buildActivepieceType: (property) => pieces_framework_1.Property.ShortText({ displayName: property.name, required: false }),
        buildNotionType: (property) => ({
            title: [
                {
                    type: 'text',
                    text: {
                        content: property,
                    },
                },
            ],
        }),
    },
    url: {
        buildActivepieceType: (property) => pieces_framework_1.Property.ShortText({
            displayName: property.name,
            required: false,
        }),
        buildNotionType: (property) => ({
            url: property,
        }),
    },
    people: {
        buildActivepieceType: undefined,
        buildNotionType: (property) => ({
            people: property.map((id) => ({ id: id })),
        }),
    },
};
//# sourceMappingURL=models.js.map