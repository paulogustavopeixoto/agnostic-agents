import { Static } from '@sinclair/typebox';
export declare enum WorkerMachineStatus {
    ONLINE = "ONLINE",
    OFFLINE = "OFFLINE"
}
export declare enum WorkerMachineType {
    DEDICATED = "DEDICATED",
    SHARED = "SHARED"
}
export declare const MachineInformation: import("@sinclair/typebox").TObject<{
    cpuUsagePercentage: import("@sinclair/typebox").TNumber;
    diskInfo: import("@sinclair/typebox").TObject<{
        total: import("@sinclair/typebox").TNumber;
        free: import("@sinclair/typebox").TNumber;
        used: import("@sinclair/typebox").TNumber;
        percentage: import("@sinclair/typebox").TNumber;
    }>;
    workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    ramUsagePercentage: import("@sinclair/typebox").TNumber;
    totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
    ip: import("@sinclair/typebox").TString;
}>;
export type MachineInformation = Static<typeof MachineInformation>;
export declare const WorkerMachine: import("@sinclair/typebox").TObject<{
    platformId: import("@sinclair/typebox").TString;
    type: import("@sinclair/typebox").TEnum<typeof WorkerMachineType>;
    information: import("@sinclair/typebox").TObject<{
        cpuUsagePercentage: import("@sinclair/typebox").TNumber;
        diskInfo: import("@sinclair/typebox").TObject<{
            total: import("@sinclair/typebox").TNumber;
            free: import("@sinclair/typebox").TNumber;
            used: import("@sinclair/typebox").TNumber;
            percentage: import("@sinclair/typebox").TNumber;
        }>;
        workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
        ramUsagePercentage: import("@sinclair/typebox").TNumber;
        totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
        ip: import("@sinclair/typebox").TString;
    }>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type WorkerMachine = Static<typeof WorkerMachine>;
export declare const WorkerMachineWithStatus: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TEnum<typeof WorkerMachineType>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
    platformId: import("@sinclair/typebox").TString;
    information: import("@sinclair/typebox").TObject<{
        cpuUsagePercentage: import("@sinclair/typebox").TNumber;
        diskInfo: import("@sinclair/typebox").TObject<{
            total: import("@sinclair/typebox").TNumber;
            free: import("@sinclair/typebox").TNumber;
            used: import("@sinclair/typebox").TNumber;
            percentage: import("@sinclair/typebox").TNumber;
        }>;
        workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
        ramUsagePercentage: import("@sinclair/typebox").TNumber;
        totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
        ip: import("@sinclair/typebox").TString;
    }>;
    status: import("@sinclair/typebox").TEnum<typeof WorkerMachineStatus>;
}>;
export type WorkerMachineWithStatus = Static<typeof WorkerMachineWithStatus>;
export declare const WorkerMachineHealthcheckRequest: import("@sinclair/typebox").TObject<{
    cpuUsagePercentage: import("@sinclair/typebox").TNumber;
    diskInfo: import("@sinclair/typebox").TObject<{
        total: import("@sinclair/typebox").TNumber;
        free: import("@sinclair/typebox").TNumber;
        used: import("@sinclair/typebox").TNumber;
        percentage: import("@sinclair/typebox").TNumber;
    }>;
    workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    ramUsagePercentage: import("@sinclair/typebox").TNumber;
    totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
    ip: import("@sinclair/typebox").TString;
}>;
export type WorkerMachineHealthcheckRequest = Static<typeof WorkerMachineHealthcheckRequest>;
