import { Static } from '@sinclair/typebox';
export declare const AI_PROVIDERS_MAKRDOWN: {
    openai: string;
    anthropic: string;
    replicate: string;
};
export declare const AI_PROVIDERS: ({
    logoUrl: string;
    defaultBaseUrl: string;
    label: "OpenAI";
    value: "openai";
    models: ({
        __tag: import("./utils").ModelType;
        label: string;
        value: string;
        supported: ("function" | "text" | "image" | "moderation")[];
        mapper: (mapper: import("./utils").ImageModelMapper | import("./utils").ChatModelMapper) => {
            mapper: import("./utils").ImageModelMapper | import("./utils").ChatModelMapper;
            __tag: import("./utils").ModelType.IMAGE | import("./utils").ModelType.CHAT;
            label: string;
            value: string;
            supported: ("function" | "text" | "image" | "moderation")[];
        };
    } | {
        mapper: import("./utils").ImageModelMapper | import("./utils").ChatModelMapper;
        __tag: import("./utils").ModelType.IMAGE | import("./utils").ModelType.CHAT;
        label: string;
        value: string;
        supported: ("function" | "text" | "image" | "moderation")[];
    })[];
    auth: import("./utils").AuthHeader;
    factory: import("..").AIFactory;
    instructionsMarkdown: string;
} | {
    logoUrl: string;
    defaultBaseUrl: string;
    label: "Anthropic";
    value: "anthropic";
    models: {
        __tag: import("./utils").ModelType;
        label: string;
        value: string;
        supported: ("function" | "text" | "image" | "moderation")[];
        mapper: (mapper: import("./utils").ImageModelMapper | import("./utils").ChatModelMapper) => {
            mapper: import("./utils").ImageModelMapper | import("./utils").ChatModelMapper;
            __tag: import("./utils").ModelType.IMAGE | import("./utils").ModelType.CHAT;
            label: string;
            value: string;
            supported: ("function" | "text" | "image" | "moderation")[];
        };
    }[];
    auth: import("./utils").AuthHeader;
    factory: import("..").AIFactory;
    instructionsMarkdown: string;
} | {
    logoUrl: string;
    defaultBaseUrl: string;
    label: "Replicate";
    value: "replicate";
    models: {
        mapper: import("./utils").ImageModelMapper | import("./utils").ChatModelMapper;
        __tag: import("./utils").ModelType.IMAGE | import("./utils").ModelType.CHAT;
        label: string;
        value: string;
        supported: ("function" | "text" | "image" | "moderation")[];
    }[];
    auth: import("./utils").AuthHeader;
    factory: import("..").AIFactory;
    instructionsMarkdown: string;
})[];
export declare const aiProps: (supported: "text" | "image" | "function" | "moderation") => {
    provider: import("@activepieces/pieces-framework").DropdownProperty<"replicate" | "openai" | "anthropic", true>;
    model: import("@activepieces/pieces-framework").DropdownProperty<string, true>;
    advancedOptions: import("@activepieces/pieces-framework").DynamicProperties<false>;
};
export type AiProviderMetadata = (typeof AI_PROVIDERS)[number];
export declare const AiProvider: import("@sinclair/typebox").TUnion<import("@sinclair/typebox").TLiteral<"replicate" | "openai" | "anthropic">[]>;
export type AiProvider = Static<typeof AiProvider>;
export * from './utils';
