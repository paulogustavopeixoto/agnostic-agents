"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AI = exports.AIChatRole = void 0;
const tslib_1 = require("tslib");
const providers_1 = require("./providers");
var AIChatRole;
(function (AIChatRole) {
    AIChatRole["SYSTEM"] = "system";
    AIChatRole["USER"] = "user";
    AIChatRole["ASSISTANT"] = "assistant";
})(AIChatRole || (exports.AIChatRole = AIChatRole = {}));
const AI = ({ provider, server, }) => {
    var _a;
    const proxyUrl = `${server.apiUrl}v1/ai-providers/proxy/${provider}`;
    const factory = (_a = providers_1.AI_PROVIDERS.find((p) => p.value === provider)) === null || _a === void 0 ? void 0 : _a.factory;
    const impl = factory === null || factory === void 0 ? void 0 : factory({ proxyUrl, engineToken: server.token });
    if (!impl) {
        throw new Error(`AI provider ${provider} is not registered`);
    }
    return {
        provider,
        image: impl.image,
        moderation: impl.moderation,
        function: impl.function,
        chat: {
            text: (params) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
                var _a;
                try {
                    const response = yield impl.chat.text(params);
                    return response;
                }
                catch (e) {
                    if ((_a = e === null || e === void 0 ? void 0 : e.error) === null || _a === void 0 ? void 0 : _a.error) {
                        throw e.error.error;
                    }
                    throw e;
                }
            })
        },
    };
};
exports.AI = AI;
tslib_1.__exportStar(require("./providers"), exports);
//# sourceMappingURL=index.js.map